{
	"info": {
		"_postman_id": "b45592ff-efd3-4417-a483-93299764a0d2",
		"name": "API automation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8488230"
	},
	"item": [
		{
			"name": "create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json = pm.response.json();\r",
							"\r",
							"pm.test('Status code should be 201', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test('Object response body should have property', function(){\r",
							"    pm.expect(json).to.be.an(\"object\");\r",
							"    pm.expect(json.name).to.be.a(\"string\");\r",
							"    pm.expect(json.id).to.be.a(\"string\");\r",
							"    pm.expect(json.job).to.be.a(\"string\");\r",
							"    pm.expect(json.createdAt).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"pm.test('response body should have value', function(){\r",
							"    pm.expect(json.name).to.equal('Maq Riki Sandi');\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"job\": \"leader\"\r\n}"
				},
				"url": {
					"raw": "{{base_url}}api/users",
					"host": [
						"{{base_url}}api"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const getId = pm.collectionVariables.get('userId');\r",
							"\r",
							"if(getId != \"2\") {\r",
							"    pm.globals.set(\"id\", 2);\r",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json = pm.response.json();\r",
							"\r",
							"pm.test('Status code should be 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('Object response body should have property', function(){\r",
							"    pm.expect(json).to.be.an(\"object\");\r",
							"    pm.expect(json.data).to.be.an(\"object\");\r",
							"    pm.expect(json.support).to.be.a(\"object\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}api/users/{{user_id}}",
					"host": [
						"{{base_url}}api"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json = pm.response.json();\r",
							"\r",
							"pm.test('Status code should be 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('Object response body should have property', function(){\r",
							"    pm.expect(json).to.be.an(\"object\");\r",
							"    pm.expect(json.name).to.be.a(\"string\");\r",
							"    pm.expect(json.job).to.be.a(\"string\");\r",
							"    pm.expect(json.updatedAt).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"pm.test('response body should have value', function(){\r",
							"    pm.expect(json.name).to.equal('Moduit');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Moduit\",\r\n    \"job\": \"qa automation\"\r\n}"
				},
				"url": {
					"raw": "{{base_url}}api/users/{{user_id}}",
					"host": [
						"{{base_url}}api"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code should be 204', function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}api/users/{{user_id}}",
					"host": [
						"{{base_url}}api"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "userId",
			"value": ""
		}
	]
}